<include/components/tdfb.conf>

Define {
	ANALOG_PLAYBACK_PCM		'Analog Playback'
	ANALOG_CAPTURE_PCM		'Analog Capture'
	HDA_ANALOG_DAI_NAME      	'Analog'
	DEEP_BUFFER_PIPELINE_ID		15
	DEEP_BUFFER_PCM_ID		31
	DEEP_BUFFER_PIPELINE_SRC	'mixin.15.1'
	DEEP_BUFFER_PIPELINE_SINK	'mixout.2.1'
	DEEP_BUFFER_PCM_NAME		'Deepbuffer HDA Analog'
	HDA_ANALOG_CAPTURE_RATE		48000
	HDA_ANALOG_PLAYBACK_RATE	48000
        HDA_MIC_ENHANCED_CAPTURE        'false'
}

# include deep buffer config if buffer size is in 1 - 1000 ms.
IncludeByKey.DEEPBUFFER_FW_DMA_MS{
	"([1-9]|[1-9][0-9]|[1-9][0-9][0-9]|1000)" "platform/intel/deep-buffer.conf"
}

Object.Dai.HDA [
	{
		name $HDA_ANALOG_DAI_NAME
		dai_index 0
		id 4
		default_hw_conf_id 4
		Object.Base.hw_config.1 {
			name	"HDA0"
		}
		direction duplex
	}
]

Object.Pipeline {
        IncludeByKey.EFX_DRC_COMPONENT {
                "singleband" {
                        mixout-gain-efx-dai-copier-playback [
                                {
                                        index 2

                                        Object.Widget.dai-copier.1 {
                                                node_type $HDA_LINK_OUTPUT_CLASS
                                                stream_name $HDA_ANALOG_DAI_NAME
                                                dai_type "HDA"
                                                copier_type "HDA"
                                        }
                                        Object.Widget.gain.1 {
                                                Object.Control.mixer.1 {
                                                        name 'Post Mixer $ANALOG_PLAYBACK_PCM Volume'
                                                }
                                        }
                                        Object.Widget.eqiir.1 {
                                                Object.Control.bytes."1" {
                                                        name 'Post Mixer $ANALOG_PLAYBACK_PCM IIR Eq bytes'
                                                }
                                        }
                                        Object.Widget.eqfir.1 {
                                                Object.Control.bytes."1" {
                                                        name 'Post Mixer $ANALOG_PLAYBACK_PCM FIR Eq bytes'
                                                }
                                        }
                                        Object.Widget.drc.1 {
                                                Object.Control {
                                                        bytes."1" {
                                                                name 'Post Mixer $ANALOG_PLAYBACK_PCM DRC bytes'
                                                        }
                                                        mixer."1" {
                                                                name 'Post Mixer $ANALOG_PLAYBACK_PCM DRC switch'
                                                        }
                                                }
                                        }
                                }
                        ]
                }
                "multiband" {
                        mixout-gain-efx-mbdrc-dai-copier-playback [
                                {
                                        index 2

                                        Object.Widget.dai-copier.1 {
                                                node_type $HDA_LINK_OUTPUT_CLASS
                                                stream_name $HDA_ANALOG_DAI_NAME
                                                dai_type "HDA"
                                                copier_type "HDA"
                                        }
                                        Object.Widget.gain.1 {
                                                Object.Control.mixer.1 {
                                                        name 'Post Mixer $ANALOG_PLAYBACK_PCM Volume'
                                                }
                                        }
                                        Object.Widget.eqiir.1 {
                                                Object.Control.bytes."1" {
                                                        name 'Post Mixer $ANALOG_PLAYBACK_PCM IIR Eq bytes'
                                                }
                                        }
                                        Object.Widget.eqfir.1 {
                                                Object.Control.bytes."1" {
                                                        name 'Post Mixer $ANALOG_PLAYBACK_PCM FIR Eq bytes'
                                                }
                                        }
                                        Object.Widget.multiband_drc.1 {
                                                Object.Control {
                                                        bytes."1" {
                                                                name 'Post Mixer $ANALOG_PLAYBACK_PCM MBDRC bytes'
                                                        }
                                                        mixer."1" {
                                                                name 'Post Mixer $ANALOG_PLAYBACK_PCM MBDRC switch'
                                                        }
                                                }
                                        }
                                }
                        ]
                }
        }

	host-copier-gain-mixin-playback [
		{
			index 1

			Object.Widget.host-copier.1 {
				stream_name $ANALOG_PLAYBACK_PCM
				pcm_id 0
			}

			Object.Widget.gain.1 {
				Object.Control.mixer.1 {
					name 'Pre Mixer $ANALOG_PLAYBACK_PCM Volume'
				}
			}
		}
	]

	host-gateway-capture [
			{
			index 	3
			Object.Widget.host-copier.1 {
				stream_name $ANALOG_CAPTURE_PCM
				pcm_id 0
                                num_input_audio_formats	1
                                Object.Base.input_audio_format [
                                        {
                                                in_rate			$HDA_ANALOG_CAPTURE_RATE
                                                in_bit_depth		32
                                                in_valid_bit_depth	32
                                        }
                                ]
                                num_output_audio_formats	3
                                Object.Base.output_audio_format [
                                        {
                                                out_rate		$HDA_ANALOG_CAPTURE_RATE
                                                out_bit_depth		16
                                                out_valid_bit_depth	16
                                        }
                                        {
                                                out_rate		$HDA_ANALOG_CAPTURE_RATE
                                                out_bit_depth		32
                                                out_valid_bit_depth	24
                                        }
                                        {
                                                out_rate		$HDA_ANALOG_CAPTURE_RATE
                                                out_bit_depth		32
                                                out_valid_bit_depth	32
                                        }
                                ]
			}
		}
	]

	dai-copier-eqiir-module-copier-capture [
		{
			index		4

			Object.Widget.dai-copier."1" {
				dai_type	"HDA"
				type		"dai_out"
				copier_type	"HDA"
				stream_name	$HDA_ANALOG_DAI_NAME
				node_type	$HDA_LINK_INPUT_CLASS
				num_output_pins 1
				num_input_audio_formats 1
				num_output_audio_formats 1
				Object.Base.input_audio_format [
					{
						in_rate			$HDA_ANALOG_CAPTURE_RATE
						in_bit_depth		32
						in_valid_bit_depth	32
					}
				]
				Object.Base.output_audio_format [
					{
						out_rate		$HDA_ANALOG_CAPTURE_RATE
						out_bit_depth		32
						out_valid_bit_depth	32
					}
				]
			}
			Object.Widget.eqiir.1 {
				Object.Control.bytes."1" {
					name '$ANALOG_CAPTURE_PCM IIR Eq'
					<include/components/eqiir/highpass_40hz_0db_48khz.conf>
				}
				num_input_audio_formats 1
				num_output_audio_formats 1
				Object.Base.input_audio_format [
					{
						in_rate			$HDA_ANALOG_CAPTURE_RATE
						in_bit_depth		32
						in_valid_bit_depth	32
					}
				]
				Object.Base.output_audio_format [
					{
						out_rate		$HDA_ANALOG_CAPTURE_RATE
						out_bit_depth		32
						out_valid_bit_depth	32
					}
				]
			}
			Object.Widget.module-copier."2" {
				stream_name $HDA_ANALOG_DAI_NAME
				num_input_audio_formats 1
				num_output_audio_formats 1
				Object.Base.input_audio_format [
					{
						in_rate			$HDA_ANALOG_CAPTURE_RATE
						in_bit_depth		32
						in_valid_bit_depth	32
					}
				]
				Object.Base.output_audio_format [
					{
						out_rate		$HDA_ANALOG_CAPTURE_RATE
						out_bit_depth		32
						out_valid_bit_depth	32
					}
				]
                        }
		}
	]
}

IncludeByKey.HDA_MIC_ENHANCED_CAPTURE {
        "true" {
                Object.Widget.tdfb.1 {
                        index		3
                        Object.Control {
                                bytes."1" {
                                        name 'Analog Capture TDFB bytes'
                                        max 16384
                                        IncludeByKey.EFX_HDA_MIC_TDFB_PARAMS {
                                                "line2_pass" "include/components/tdfb/line2_pass.conf"
                                                "line2_generic_pm10deg" "include/components/tdfb/line2_generic_pm10deg_48khz.conf"
                                                "line2_50mm" "include/components/tdfb/line2_50mm_pm0_30_90deg_48khz.conf"
                                                "line2_68mm" "include/components/tdfb/line2_68mm_pm0_30_90deg_48khz.conf"
                                                "line2_74mm" "include/components/tdfb/line2_74mm_pm0_30_90deg_48khz.conf"
                                        }
                                }
                                mixer."1" {
                                        name 'Analog Capture TDFB beam switch'
                                }
                                enum."1" {
                                        name 'Analog Capture TDFB angle set enum'
                                }
                                # Tracking is disabled from this topology, causes high MCPS
                                #mixer."2" {
                                #	 name 'Analog Capture TDFB track switch'
                                #}
                                #enum."2" {
                                #	 name 'Analog Capture TDFB angle estimate enum'
                                #}
                        }
                        num_input_audio_formats	1
                        Object.Base.input_audio_format [
                                {
                                        in_rate			$HDA_ANALOG_CAPTURE_RATE
                                        in_channels		2
                                        in_bit_depth		32
                                        in_valid_bit_depth	32
                                }
                        ]
                        num_output_audio_formats	1
                        Object.Base.output_audio_format [
                                {
                                        out_channels		2
                                        out_rate		$HDA_ANALOG_CAPTURE_RATE
                                        out_bit_depth		32
                                        out_valid_bit_depth	32
                                }
                        ]
                }

                Object.Widget.drc.1 {
                        index		3
                        Object.Control {
                                bytes."1" {
                                        name 'Analog Capture DRC bytes'
                                        IncludeByKey.EFX_HDA_MIC_DRC_PARAMS {
                                                "passthrough" "include/components/drc/passthrough.conf"
                                                "amic_default" "include/components/drc/amic_default.conf"
                                        }
                                }
                                mixer."1" {
                                        name 'Analog Capture DRC switch'
                                }
                        }
                        num_input_audio_formats	    1
                        Object.Base.input_audio_format [
                                {
                                        in_rate			$HDA_ANALOG_CAPTURE_RATE
                                        in_bit_depth		32
                                        in_valid_bit_depth	32
                                }
                        ]
                        num_output_audio_formats	1
                        Object.Base.output_audio_format [
                                {
                                        out_rate		$HDA_ANALOG_CAPTURE_RATE
                                        out_bit_depth		32
                                        out_valid_bit_depth	32
                                }
                        ]
                }
        }
}

Object.PCM.pcm [
	{
		id 0
		name 'HDA Analog'
		Object.Base.fe_dai.1 {
			name "HDA Analog"
		}
		Object.PCM.pcm_caps.1 {
			direction	"playback"
			name $ANALOG_PLAYBACK_PCM
			formats 'S32_LE,S24_LE,S16_LE'
		}
		Object.PCM.pcm_caps.2 {
			direction	"capture"
			name $ANALOG_CAPTURE_PCM
			formats 'S32_LE,S24_LE,S16_LE'
		}
		direction duplex
	}
]

# top-level pipeline connections

IncludeByKey.EFX_DRC_COMPONENT {
        "singleband" {
                Object.Base.route [
                        {
                                source 'host-copier.0.playback'
                                sink 'gain.1.1'
                        }
                        {
                                source 'mixin.1.1'
                                sink 'mixout.2.1'
                        }
                        {
                                source 'drc.2.1'
                                sink 'dai-copier.HDA.$HDA_ANALOG_DAI_NAME.playback'
                        }
                ]
        }
        "multiband" {
                Object.Base.route [
                        {
                                source 'host-copier.0.playback'
                                sink 'gain.1.1'
                        }
                        {
                                source 'mixin.1.1'
                                sink 'mixout.2.1'
                        }
                        {
                                source 'multiband_drc.2.1'
                                sink 'dai-copier.HDA.$HDA_ANALOG_DAI_NAME.playback'
                        }
                ]
        }
}

IncludeByKey.HDA_MIC_ENHANCED_CAPTURE {
       "true" {
                Object.Base.route [
                        {
                                source 'dai-copier.HDA.$HDA_ANALOG_DAI_NAME.capture'
                                sink 'eqiir.4.1'
                        }
                        {
                                source 'module-copier.4.2'
                                sink 'tdfb.3.1'
                        }
                        {
                                source 'tdfb.3.1'
                                sink 'drc.3.1'
                        }
                        {
                                source 'drc.3.1'
                                sink 'host-copier.0.capture'
                        }
                ]
        }
        "false" {
                Object.Base.route [
                        {
                                source 'dai-copier.HDA.$HDA_ANALOG_DAI_NAME.capture'
                                sink 'eqiir.4.1'
                        }
                        {
                                source 'module-copier.4.2'
                                sink 'host-copier.0.capture'
                        }
                ]
        }

}
