#
# Common pipeline volume
#
# A generic volume widget. All attributes defined herein are namespaced
# by alsatplg to "Object.Widget.pga.N.attribute_name"
#
# Usage: this component can be used by declaring int a parent object. i.e.
#
# 	Object.Widget.pga."N" {
#		index	1
#		format	s24le
#		no_pm	"true"
#	}
#
# Where N is the unique instance number for pga widget in the same alsaconf node.

<include/controls/mixer.conf>

Class.Widget."pga" {
	#
	# Pipeline ID for the pga widget object
	#
	DefineAttribute."index" {}

	#
	# pga object instance
	#
	DefineAttribute."instance" {}

	#include common component definition
	<include/components/widget-common.conf>

	#
	# Bespoke attributes for PGA
	#

	#
	# Volume ramp step type. The values provided will be translated to integer values
	# as specified in the tuple_values array.
	# For example: "linear" is translated to 0, "log" to 1 etc.
	#
	DefineAttribute."ramp_step_type" {
		type	"string"
		# Token set reference name
		token_ref	"volume.word"
		constraints {
			!valid_values [
				"linear"
				"log"
				"linear_zc"
				"log_zc"
			]
			!tuple_values [
				0
				1
				2
				3
			]
		}
	}

	#
	# Volume ramp step in milliseconds
	#
	DefineAttribute."ramp_step_ms" {
		# Token set reference name
		token_ref	"volume.word"
	}

	# Attribute categories
	attributes {
		#
		# The PGA widget name would be constructed using the index and instance attributes.
		# For ex: "pga.1.1" or "pga.10.2" etc.
		#
		!constructor [
			"index"
			"instance"
		]

		#
		# immutable attributes cannot be modified in the object instance
		#
		!immutable [
			"uuid"
			"type"
		]

		#
		# deprecated attributes should not be added in the object instance
		#
		!deprecated [
			"preload_count"
		]

		#
		# pga widget objects instantiated within the same alsaconf node must have unique
		# instance attribute
		#
		unique	"instance"
	}

	#
	# pga widget mixer controls
	#
	Object.Control {
		# volume mixer control
		mixer."1" {
			#Channel register and shift for Front Left/Right
			Object.Base.channel.1 {
				name	"fl"
				shift	0
			}
			Object.Base.channel.2 {
				name	"fr"
			}

			Object.Base.ops.1 {
				name	"ctl"
				info 	"volsw"
				#256 binds the mixer control to volume get/put handlers
				get 	256
				put 	256
			}
			max 32
		}

		# mute switch control
		mixer."2" {
			Object.Base.channel.1 {
				name	"flw"
				reg	2
				shift	0
			}
			Object.Base.channel.2 {
				name	"fl"
				reg	2
				shift	1
			}
			Object.Base.channel.3 {
				name	"fr"
				reg	2
				shift	2
			}
			Object.Base.channel.4 {
				name	"frw"
				reg	2
				shift	3
			}

			Object.Base.ops.1 {
				name	"ctl"
				info "volsw"
				#259 binds the mixer control to switch get/put handlers
				get "259"
				put "259"
			}

			#max 1 indicates switch type control
			max 1
		}
	}

	# Default attribute values for pga widget
	type 			"pga"
	uuid 			"7e:67:7e:b7:f4:5f:88:41:af:14:fb:a8:bd:bf:86:82"
	no_pm			"true"
	ramp_step_type		"linear"
	ramp_step_ms		400
}
