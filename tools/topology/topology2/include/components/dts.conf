#
# Common widget dts
#
# A generic dts widget. All attributes defined herein are namespaced
# by alsatplg to "Object.Widget.dts.N.attribute_name"
#
# Usage: this component can be used by instantiating it in the parent object. i.e.
#
# 	Object.Widget.dts."N" {
# 		index		1
# 		type		"effect"
#	}
#
# Where N is the unique instance number for the smart_amp object within the same alsaconf node.

Class.Widget."dts" {
	#
	# Pipeline ID for the DTS widget object
	#
	DefineAttribute."index" {
        	type "integer"
    	}

    	#
    	# Unique instance for DTS widget
    	#
    	DefineAttribute."instance" {
        	type "integer"
    	}

	#include common component definition
	<include/components/widget-common.conf>

    	DefineAttribute."cpc" {
        	# Token set reference name and type
        	token_ref   "comp.word"
    	}

	Object.Control.bytes."1" {
		!access  [
			tlv_read
		        tlv_write
			tlv_callback
		]
		Object.Base.extops.1 {
			name	"extctl"
			get 258
			put 258
		}
		max 2048
		Object.Base.data.1 {
                    <include/components/dts/dts_spk.conf>
		}
	}

	# Attribute categories
	attributes {
		#
		# The DTS widget name would be constructed using the index and instance attributes.
		#
		!constructor [
			"index"
			"instance"
		]

		#
		# mandatory attributes that must be provided when the class is instantiated
		#
		!mandatory [
			"no_pm"
			"uuid"
			"num_input_audio_formats"
			"num_output_audio_formats"
		]

		#
		# immutable attributes cannot be modified in the object instance
		#
		!immutable [
			"type"
		]

		#
		# deprecated attributes should not be added in the object instance
		#
		!deprecated [
			"preload_count"
		]

		#
		# DTS widget objects instantiated within the same alsaconf node must have unique
		# instance attribute
		#
		unique	"instance"
	}

	# Default attribute values for smart_amp widget

	# UUID can be overridden in the top-level topology file
	uuid			"4f:c3:5f:d9:0f:37:c7:4a:bc:86:bf:dc:5b:e2:41:e6"
	type			"effect"
	no_pm 			"true"
	core_id			0
	cpc                     5000
	num_input_pins		1
	num_output_pins		1
}
