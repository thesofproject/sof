#
# SAI DAI class definition. All attributes defined herein are namespaced
# by alsatplg to "Object.Dai.SAI.N.attribute_name"
#
# Usage: SAI DAI objects can be instantiated as:
#
# Object.Dai.SAI."N" {
# 	direction		"duplex" # playback, capture or duplex
# 	dai_name		"NoCodec-0"
# 	id 			0
# 	Object.hw_config."0" {
# 		mclk_freq	12288000
# 		bclk_freq	3072000
# 		tdm_slot_width	32
# 	}
# 	Object.dai."playback" {
# 	}
# 	Object.dai."capture" {
# 	}
# }
#
# where N is the unique instance number for the SAI object within the same alsaconf node.

# SAI port definition
Class.Dai."SAI" {

	#
	# instance ID of SAI DAI object
	#
	DefineAttribute."instance" {}

	# DAI Index
	DefineAttribute."dai_index" {
		token_ref	"dai.word"
	}

	DefineAttribute."direction" {
		type "string"
		constraints {
			!valid_values [
				"playback"
				"capture"
				"duplex"
			]
		}
	}

	DefineAttribute."dai_type" {
		type	"string"
		token_ref	"dai.string"
	}

	DefineAttribute."default_hw_config_id" {}

	DefineAttribute."name" {
		type	"string"
	}

	# Backend DAI Link ID matching with the machine driver
	DefineAttribute."id" {}

	DefineAttribute."mclk_id" {
		# Token reference and type
		token_ref	"nxp_sai.short"
	}

	# platform clock frequency
	DefineAttribute.io_clk {}

	attributes {
		!constructor [
			"name"
		]

		!mandatory [
			"id"
			"sample_bits"
			"dai_index"
		]

		!immutable [
			"dai_type"
		]
		#
		# SAI DAI objects instantiated within the same alsaconf node must have unique
		# instance attribute
		#
		unique	"instance"
	}

	dai_type		"SAI"
	mclk_id 		0
	default_hw_config_id	0
}
