#
# BE playback pipeline: mixout-gain-ctc-dai-copier.
# This pipeline is an extension of the mixout-gain-dai-copier-playback pipeline class.
#
# All attributes defined herein are namespaced
# by alsatplg to "Object.Pipeline.mixout-gain-ctc-dai-copier-playback.N.attribute_name"
#
# Usage: mixout-gain-ctc-dai-copier-playback pipeline object can be instantiated as:
#
# Object.Pipeline.mixout-gain-ctc-dai-copier-playback."N" {
# 	period		1000
# 	time_domain	"timer"
# }
#
# Where N is the unique pipeline ID within the same alsaconf node.
#

<include/common/input_audio_format.conf>
<include/common/output_audio_format.conf>
<include/components/dai-copier.conf>
<include/components/gain.conf>
<include/components/mixout.conf>
<include/components/pipeline.conf>
<include/components/ctc.conf>
<platform/intel/efx-default.conf>
<include/pipelines/cavs/mixout-gain-dai-copier-playback.conf>

Class.Pipeline."mixout-gain-ctc-dai-copier-playback" {
	SubTreeCopy.baseclass {
		# this class extends the mixout-gain-dai-copier-playback class definition
		source "Class.Pipeline.mixout-gain-dai-copier-playback"

		# target node is not defined which means that the new subtree will be copied to
		# the parent node containing the SubTreeCopy node i.e in this case the
		# Class.Pipeline.mixout-gain-ctc-dai-copier-playback {} node.

		# default copy type is to extend the base class ie the widgets and routes
		# will be added to the existing list of widgets/routes in the base class

		tree {
			Object.Widget {
				ctc."1" {
					num_input_audio_formats 1
					num_output_audio_formats 1

					Object.Base.input_audio_format [
						{
							in_bit_depth		32
							in_valid_bit_depth	32
						}
					]
					Object.Base.output_audio_format [
						{
							out_bit_depth		32
							out_valid_bit_depth	32
						}
					]
				}
			}

			Object.Base {
				! route [
					{
						source gain.$index.1
						sink   ctc.$index.1
					}
				]
			}
		}
	}
}
