#
# wov detection pipeline
#
# A wov detection pipeline. All attributes defined herein are namespaced
# by alsatplg to "Object.Pipeline.wov-detect.N.attribute_name".
#
# Usage: wov-detect pipeline object can be instantiated as:
#
# Object.Pipeline.wov-detect."N" {
# 	format		"s16le"
# 	period		1000
# 	time_domain	"timer"
# }
#
# Where N is the unique pipeline ID within the same alsaconf node.
#

<include/common/input_audio_format.conf>
<include/common/output_audio_format.conf>
<include/components/dai-copier.conf>
<include/components/micsel.conf>
<include/components/wov.conf>
<include/components/pipeline.conf>
<include/controls/bytes.conf>

Class.Pipeline."wov-detect" {

	<include/pipelines/pipeline-common.conf>

	attributes {
		!constructor [
			"index"
		]

		!mandatory [
			"format"
		]

		!immutable [
			"direction"
		]

		#
		# wov-detect objects instantiated within the same alsaconf node must have
		# unique pipeline_id attribute
		#
		unique	"instance"
	}

	Object.Widget {

		# virtual widget is only used in driver to connect wov widget
		# to the host copier. The virtual widget does not exist in
		# the firmware.
		virtual."1" {
			name "virtual.detect_sink"
			type out_drv
		}

		micsel."1" {
			Object.Base.input_audio_format [
				{
					in_rate		16000
					in_channels	2
					in_ch_map	$CHANNEL_MAP_STEREO
					in_ch_cfg	1
					in_bit_depth	32
					in_valid_bit_depth	32
				}
			]
			Object.Base.output_audio_format [
				{
					out_rate	16000
					out_channels	1
					out_ch_map	$CHANNEL_MAP_MONO
					out_ch_cfg	0
					out_bit_depth	32
					out_valid_bit_depth	32
				}
			]
		}

		wov."1" {
			num_input_audio_formats 1
			num_output_audio_formats 1
			Object.Base.input_audio_format [
				{
					in_rate		16000
					in_channels	1
					in_ch_cfg	0
					in_ch_map	$CHANNEL_MAP_MONO
					in_bit_depth	32
					in_valid_bit_depth	32
				}
			]
			Object.Base.output_audio_format [
				{
					out_rate	16000
					out_channels	1
					out_bit_depth	32
					out_valid_bit_depth	32
				}
			]
		}

		pipeline."1" {
			priority	0
			lp_mode		0
		}
	}

	Object.Base {
		route."1" {
			source "micsel.$index.1"
			sink "wov.$index.1"
		}

		route."2" {
			source "wov.$index.1"
			sink "virtual.detect_sink"
		}
	}

	direction	"capture"
	dynamic_pipeline 1
	time_domain	"timer"
}
