#
# BE playback pipeline: mixout-gain-eqiir-eqfir-drc-alh-dai-copier.
#
# All attributes defined herein are namespaced
# by alsatplg to "Object.Pipeline.mixout-gain-eqiir-eqfir-drc-alh-dai-copier-playback.N.attribute_name"
#
# Usage: mixout-gain-eqiir-eqfir-drc-alh-dai-copier-playback pipeline object can be instantiated as:
#
# Object.Pipeline.mixout-gain-eqiir-eqfir-drc-alh-dai-copier-playback."N" {
# 	time_domain	"timer"
# }
#
# Where N is the unique pipeline ID within the same alsaconf node.
#


<include/components/eqiir.conf>
<include/components/eqfir.conf>
<include/components/drc.conf>
<include/pipelines/cavs/mixout-gain-alh-dai-copier-playback.conf>

Class.Pipeline."mixout-gain-eqiir-eqfir-drc-alh-dai-copier-playback" {

	SubTreeCopy.baseclass {
		# this class extends the mixout-gain-alh-dai-copier-playback pipeline class.
		source "Class.Pipeline.mixout-gain-alh-dai-copier-playback"

		# target node is not defined which means that the new subtree will be copied to
		# the parent node containing the SubTreeCopy node i.e in this case the
		# Class.Pipeline.mixout-gain-eqiir-eqfir-drc-alh-dai-copier-playback {} node.

		# default copy type is to extend the base class ie the widgets and routes
		# will be added to the existing list of widgets/routes in the base class

		tree {
                        Object.Widget {
                                eqiir."1" {
                                        num_input_audio_formats 1
                                        num_output_audio_formats 1

                                        # 32-bit 48KHz 2ch
                                        Object.Base.input_audio_format [
                                                {
                                                        in_bit_depth		32
                                                        in_valid_bit_depth	32
                                                }
                                        ]
                                        Object.Base.output_audio_format [
                                                {
                                                        out_bit_depth		32
                                                        out_valid_bit_depth	32
                                                }
                                        ]

                                        Object.Control.bytes."1" {
                                                IncludeByKey.EFX_SPK_IIR_PARAMS {
                                                        "passthrough" "include/components/eqiir/passthrough.conf"
                                                        "highpass_20hz_0db_48khz" "include/components/eqiir/highpass_20hz_0db_48khz.conf"
                                                        "highpass_30hz_0db_48khz" "include/components/eqiir/highpass_30hz_0db_48khz.conf"
                                                        "highpass_40hz_0db_48khz" "include/components/eqiir/highpass_40hz_0db_48khz.conf"
                                                        "highpass_50hz_0db_48khz" "include/components/eqiir/highpass_50hz_0db_48khz.conf"
                                                        "highpass_100hz_0db_48khz" "include/components/eqiir/highpass_100hz_0db_48khz.conf"
                                                }
                                        }
                                }

                                eqfir."1" {
                                        num_input_audio_formats 1
                                        num_output_audio_formats 1

                                        # 32-bit 48KHz 2ch
                                        Object.Base.input_audio_format [
                                                {
                                                        in_bit_depth		32
                                                        in_valid_bit_depth	32
                                                }
                                        ]
                                        Object.Base.output_audio_format [
                                                {
                                                        out_bit_depth		32
                                                        out_valid_bit_depth	32
                                                }
                                        ]

                                        Object.Control.bytes."1" {
                                                IncludeByKey.EFX_SPK_FIR_PARAMS {
                                                        "passthrough" "include/components/eqfir/passthrough.conf"
                                                }
                                        }
                                }

                                drc."1" {
                                        num_input_audio_formats 1
                                        num_output_audio_formats 1

                                        # 32-bit 48KHz 2ch
                                        Object.Base.input_audio_format [
                                                {
                                                        in_bit_depth		32
                                                        in_valid_bit_depth	32
                                                }
                                        ]
                                        Object.Base.output_audio_format [
                                                {
                                                        out_bit_depth		32
                                                        out_valid_bit_depth	32
                                                }
                                        ]

                                        Object.Control.bytes."1" {
                                                IncludeByKey.EFX_SPK_DRC_PARAMS {
                                                        "passthrough" "include/components/drc/passthrough.conf"
                                                        "speaker_default" "include/components/drc/speaker_default.conf"
                                                }
                                        }
                                }
                        }

			Object.Base {
				!route [
					{
						source  gain.$index.1
						sink	eqiir.$index.1
					}
					{
						source  eqiir.$index.1
						sink	eqfir.$index.1
					}
					{
						source  eqfir.$index.1
						sink	drc.$index.1
					}
				]
			}
                }
        }
}
