#
# CAVS gain (volume) capture pipeline
#
# A simple gain (volume) pipeline. All attributes defined herein are namespaced
# by alsatplg to "Object.Pipeline.gain-copier-capture.N.attribute_name".
#
# Usage: gain-copier-capture pipeline object can be instantiated as:
#
# Object.Pipeline.gain-copier-capture."N" {
# 	format		"s16le"
# 	period		1000
# 	time_domain	"timer"
# }
#
# Where N is the unique pipeline ID within the same alsaconf node.
#

<include/common/input_audio_format.conf>
<include/common/output_audio_format.conf>
<include/components/host-copier.conf>
<include/components/gain.conf>
<include/components/pipeline.conf>

Class.Pipeline."gain-copier-capture" {

	<include/pipelines/pipeline-common.conf>

	attributes {
		!constructor [
			"index"
		]

		!immutable [
			"direction"
		]

		#
		# gain-copier-capture objects instantiated within the same
		# alsaconf node must have unique pipeline_id attribute
		#
		unique	"instance"
	}

	Object.Widget {
		host-copier."1" {
			type	"aif_out"
			num_input_audio_formats 1
			num_output_audio_formats 3
			num_input_pins 1

			Object.Base.input_audio_format [
				# 32-bit 48KHz 2ch
				{
					in_bit_depth		32
					in_valid_bit_depth	32
				}
			]

			Object.Base.output_audio_format [
				{
					out_bit_depth		32
					out_valid_bit_depth	32
				}
				{
					out_bit_depth		16
					out_valid_bit_depth	16
				}
				{
					out_bit_depth		32
					out_valid_bit_depth	24
				}
			]
			node_type $HDA_HOST_INPUT_CLASS
		}

		gain."1" {
			num_input_audio_formats 2
			num_output_audio_formats 2
			Object.Base.input_audio_format [
				#16-bit 48KHz 2ch
				{
					in_bit_depth		16
					in_valid_bit_depth	16
				}
				# 32-bit 48KHz 2ch
				{
					in_bit_depth		32
					in_valid_bit_depth	32
				}
			]

			Object.Base.output_audio_format [
				{
					out_bit_depth		32
					out_valid_bit_depth	32
				}
				{
					out_bit_depth		16
					out_valid_bit_depth	16
				}
			]
		}

		module-copier."2" {
			num_input_audio_formats 2
			num_output_audio_formats 2
			Object.Base.input_audio_format [
				#16-bit 48KHz 2ch
				{
					in_bit_depth		16
					in_valid_bit_depth	16
				}
				# 32-bit 48KHz 2ch
				{
					in_bit_depth		32
					in_valid_bit_depth	32
				}
			]

			Object.Base.output_audio_format [
				{
					out_bit_depth		32
					out_valid_bit_depth	32
				}
				{
					out_bit_depth		16
					out_valid_bit_depth	16
				}
			]
		}

		pipeline."1" {
			priority	0
			lp_mode		0
		}
	}

	Object.Base.route [
		{
			source	"module-copier.$index.2"
			sink	"gain.$index.1"
		}
	]

	direction	"capture"
	dynamic_pipeline 1
	time_domain	"timer"
}
