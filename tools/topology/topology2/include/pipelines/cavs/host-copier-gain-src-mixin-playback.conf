#
# FE playback pipeline: host-copier-gain-mixin-playback
#
# All attributes defined herein are namespaced
# by alsatplg to "Object.Pipeline.host-copier-gain-src-mixin-playback.N.attribute_name"
#
# Usage: host-copier-gain-src-mixin-playback pipeline object can be instantiated as:
#
# Object.Pipeline.host-copier-gain-src-mixin-playback."N" {
# 	period		1000
# 	time_domain	"timer"
# }
#
# Where N is the unique pipeline ID within the same alsaconf node.
#

<include/common/input_audio_format.conf>
<include/common/output_audio_format.conf>
<include/components/host-copier.conf>
<include/components/mixin.conf>
<include/components/pipeline.conf>
<include/components/gain.conf>
<include/components/src.conf>

Class.Pipeline."host-copier-gain-src-mixin-playback" {

	<include/pipelines/pipeline-common.conf>

	attributes {
		!constructor [
			"index"
		]

		!immutable [
			"direction"
		]

		#
		# host-copier-gain-src-mixin-playback objects instantiated within the same
		# alsaconf node must have unique pipeline_id attribute
		#
		unique	"instance"
	}

	Object.Widget {
		host-copier."1" {
			type	"aif_in"
			node_type $HDA_HOST_OUTPUT_CLASS
			num_output_pins 1

			<include/components/src_format_sxx_to_s32_convert.conf>
		}

		gain."1" {
			<include/components/src_format_s32_passthrough.conf>
		}

		src."1" {
			rate_out 48000

			<include/components/src_format_s32_convert_to_48k.conf>
		}

		mixin."1" {}

		pipeline."1" {
			priority	0
			lp_mode		0
		}
	}

	Object.Base.route [
		{
			source	gain.$index.1
			sink src.$index.1
		}
		{
			source	src.$index.1
			sink mixin.$index.1
		}
	]

	direction	"playback"
	dynamic_pipeline 1
	time_domain	"timer"
}
