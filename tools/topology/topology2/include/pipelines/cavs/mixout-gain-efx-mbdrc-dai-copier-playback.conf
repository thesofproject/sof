#
# BE playback pipeline: mixout-gain-efx-mbdrc-dai-copier.
#
# All attributes defined herein are namespaced
# by alsatplg to "Object.Pipeline.mixout-gain-efx-mbdrc-dai-copier-playback.N.attribute_name"
#
# Usage: mixout-gain-efx-mbdrc-dai-copier-playback pipeline object can be instantiated as:
#
# Object.Pipeline.mixout-gain-efx-mbdrc-dai-copier-playback."N" {
# 	period		1000
# 	time_domain	"timer"
# }
#
# Where N is the unique pipeline ID within the same alsaconf node.
#

<include/components/multiband_drc.conf>
<platform/intel/efx-default.conf>
<include/pipelines/cavs/mixout-gain-eqiir-eqfir-playback.conf>

# this class extends the widgets and overrides the routes in mixout-gain-eqiir-eqfir pipeline class.
Class.Pipeline."mixout-gain-efx-mbdrc-dai-copier-playback" {

	# extend the base class with the new widget
	SubTreeCopy.baseclass {
		source "Class.Pipeline.mixout-gain-eqiir-eqfir"

		# target node is not defined which means that the new subtree will be copied to
		# the parent node containing the SubTreeCopy node i.e in this case the
		# Class.Pipeline.mixout-gain-efx-mbdrc-dai-copier-playback {} node.

		# default copy type is to extend the base class ie the widgets and routes
		# will be added to the existing list of widgets/routes in the base class

		tree {
			Object.Widget.multiband_drc."1" {
				num_input_audio_formats 1
				num_output_audio_formats 1

				Object.Base.input_audio_format [
					{
						in_bit_depth		32
						in_valid_bit_depth	32
					}
				]
				Object.Base.output_audio_format [
					{
						out_bit_depth		32
						out_valid_bit_depth	32
					}
				]

				Object.Control.bytes."1" {
					IncludeByKey.EFX_MBDRC_PARAMS {
						"passthrough"	"include/components/multiband_drc/passthrough.conf"
						"default"	"include/components/multiband_drc/default.conf"
					}
				}
			}
			Object.Base {
				!route [
					{
						source	eqfir.$index.1
						sink	multiband_drc.$index.1
					}
				]
			}
		}
	}
}
