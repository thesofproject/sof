<searchdir:include>
<searchdir:include/common>
<searchdir:include/components>
<searchdir:include/dais>
<searchdir:include/pipelines/cavs>
<searchdir:platform>
<searchdir:platform/intel>

<vendor-token.conf>
<manifest.conf>
<tokens.conf>
<host-gateway-capture.conf>
<host-gateway-playback.conf>
<mixout-gain-dai-copier-playback.conf>
<host-copier-gain-mixin-playback.conf>
<io-gateway-capture.conf>
<io-gateway.conf>
<data.conf>
<pcm.conf>
<pcm_caps.conf>
<fe_dai.conf>
<ssp.conf>
<route.conf>
<common_definitions.conf>
<dai-copier.conf>
<module-copier.conf>
<gain.conf>
<pipeline.conf>
<input_audio_format.conf>
<output_audio_format.conf>
<ov_noise_suppression.conf>

Object.Pipeline.io-gateway-capture [
	{
		index		10
		direction	capture

		Object.Widget.dai-copier."1" {
			dai_index	1
			dai_type	"SSP"
			type		dai_out
			copier_type	"SSP"
			stream_name	"NoCodec-1"
			node_type	$I2S_LINK_INPUT_CLASS

			num_input_audio_formats 1
			Object.Base.input_audio_format [
				{
					in_rate			16000
					in_bit_depth		16
					in_valid_bit_depth	16
				}
			]
			num_output_audio_formats 1
			Object.Base.output_audio_format [
				{
					out_rate		16000
					out_bit_depth		16
					out_valid_bit_depth	16
				}
			]
		}
	}
]

Object.Pipeline.host-gateway-capture [
	{
		index 	9

		Object.Widget.host-copier.1 {
			stream_name 'SSP1 Capture'
			pcm_id 1
			num_input_audio_formats 1
			Object.Base.input_audio_format [
				{
					in_rate			16000
					in_bit_depth		16
					in_valid_bit_depth	16
				}
			]
			num_output_audio_formats 1
			Object.Base.output_audio_format [
				{
					out_rate		16000
					out_bit_depth		16
					out_valid_bit_depth	16
				}
			]
		}
	}
]

IncludeByKey.PLAYBACK_PROCESS {
"passthrough"	{
		Object.Pipeline.io-gateway [
			{
				index	4
				direction	playback

				Object.Widget.dai-copier.1 {
					dai_index 1
					dai_type "SSP"
					copier_type "SSP"
					stream_name "NoCodec-1"
					node_type $I2S_LINK_OUTPUT_CLASS
					num_input_audio_formats 1
					Object.Base.input_audio_format [
						{
							in_bit_depth		16
							in_valid_bit_depth	16
						}
					]
					num_output_audio_formats 1
					Object.Base.output_audio_format [
						{
							out_bit_depth		16
							out_valid_bit_depth	16
						}
					]
				}
			}
		]
		Object.Pipeline.host-gateway-playback [
			{
				index	3
				Object.Widget.host-copier.1 {
					stream_name 'SSP1 Playback'
					pcm_id 1
					num_input_audio_formats 1
					Object.Base.input_audio_format [
						{
							in_bit_depth		16
							in_valid_bit_depth	16
						}
					]
					num_output_audio_formats 1
					Object.Base.output_audio_format [
						{
							out_bit_depth		16
							out_valid_bit_depth	16
						}
					]
				}
			}
		]
	}
"mix"	{
		Object.Pipeline.mixout-gain-dai-copier-playback [
			{
				index	4

				Object.Widget.dai-copier.1 {
					dai_index 1
					dai_type "SSP"
					copier_type "SSP"
					stream_name "NoCodec-1"
					node_type $I2S_LINK_OUTPUT_CLASS
					num_input_audio_formats 1
					Object.Base.input_audio_format [
						{
							in_bit_depth		16
							in_valid_bit_depth	16
						}
					]
					num_output_audio_formats 1
					Object.Base.output_audio_format [
						{
							out_bit_depth		16
							out_valid_bit_depth	16
						}
					]
				}
				Object.Widget.gain.1 {
					curve_type "windows_fade"
					Object.Control.mixer.1 {
						name 'Post Mixer PlugPCM Playback Volume'
					}
					num_input_audio_formats 1
					Object.Base.input_audio_format [
						{
							in_bit_depth		16
							in_valid_bit_depth	16
						}
					]
					num_output_audio_formats 1
					Object.Base.output_audio_format [
						{
							out_bit_depth		16
							out_valid_bit_depth	16
						}
					]
				}
				Object.Widget.mixout.1 {
					num_input_audio_formats 1
					Object.Base.input_audio_format [
						{
							in_bit_depth		16
							in_valid_bit_depth	16
						}
					]
					num_output_audio_formats 1
					Object.Base.output_audio_format [
						{
							out_bit_depth		16
							out_valid_bit_depth	16
						}
					]
				}
			}
		]
		Object.Pipeline.host-copier-gain-mixin-playback [
			{
				index	3
				Object.Widget.host-copier.1 {
					stream_name 'SSP1 Playback'
					pcm_id 1
					num_input_audio_formats 1
					Object.Base.input_audio_format [
						{
							in_bit_depth		16
							in_valid_bit_depth	16
						}
					]
					num_output_audio_formats 1
					Object.Base.output_audio_format [
						{
							out_bit_depth		16
							out_valid_bit_depth	16
						}
					]
				}
				Object.Widget.gain.1 {
					curve_type "windows_fade"
					Object.Control.mixer.1 {
						name 'Pre Mixer PlugPCM Playback Volume'
					}
					num_input_audio_formats 1
					Object.Base.input_audio_format [
						{
							in_bit_depth		16
							in_valid_bit_depth	16
						}
					]
					num_output_audio_formats 1
					Object.Base.output_audio_format [
						{
							out_bit_depth		16
							out_valid_bit_depth	16
						}
					]
				}
				Object.Widget.mixin.1 {
					num_input_audio_formats 1
					Object.Base.input_audio_format [
						{
							in_bit_depth		16
							in_valid_bit_depth	16
						}
					]
					num_output_audio_formats 1
					Object.Base.output_audio_format [
						{
							out_bit_depth		16
							out_valid_bit_depth	16
						}
					]
				}
			}
		]
	}
}

Object.PCM.pcm [
	{
		name	"PluginPCM"
		id 1
		direction	"duplex"
		Object.Base.fe_dai.1 {
			name	"PluginPlayback"
		}

		Object.PCM.pcm_caps.1 {
			direction	"playback"
			name "SSP1 Playback"
			formats 'S16_LE'
		}

		Object.PCM.pcm_caps.2 {
			direction	"capture"
			name "SSP1 Capture"
			formats 'S16_LE'
		}
	}
]

IncludeByKey.NOISE_SUPPRESSION {
"true" {
	Object.Widget.ov_ns.1 {
		index 9
	}
	Object.Base.route [
		{
			source	"dai-copier.SSP.NoCodec-1.capture"
			sink	"ov_ns.9.1"
		}
		{
			source "ov_ns.9.1"
			sink	"host-copier.1.capture"
		}
	]
	}
"false" {
	Object.Base.route [
		{
			source	"dai-copier.SSP.NoCodec-1.capture"
			sink	"host-copier.1.capture"
		}
	]
	}
}

IncludeByKey.PLAYBACK_PROCESS {
"passthrough" {
		Object.Base.route [
			{
				source	"host-copier.1.playback"
				sink	"dai-copier.SSP.NoCodec-1.playback"
			}
		]
	}
"mix"	{
		Object.Base.route [
			{
				source	"host-copier.1.playback"
				sink	"gain.3.1"
			}
			{
				source	"mixin.3.1"
				sink	"mixout.4.1"
			}
			{
				source	"gain.4.1"
				sink	"dai-copier.SSP.NoCodec-1.playback"
			}
		]
	}
}
