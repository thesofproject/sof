---
name: User space tools/ directory

# 'workflow_dispatch' allows running this workflow manually from the
# 'Actions' tab

# yamllint disable-line rule:truthy
# on: [pull_request, workflow_dispatch, workflow_call]

jobs:
  # This is not the same as building every ./build-tools.sh option.
  top-level_default_CMake_target_ALL:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: 'tree:0'

      # The ALSA version in Ubuntu 20.04 is buggy
      # (https://github.com/thesofproject/sof/issues/2543) and likely
      # getting out of date soon
      - name: docker
        run: docker pull thesofproject/sof && docker tag thesofproject/sof sof

      # For some reason gcc has more warnings in Release mode
      - name: build-tools
        run: CMAKE_BUILD_TYPE=Release ./scripts/docker-run.sh
          ./scripts/build-tools.sh ||
             VERBOSE=1 NO_PROCESSORS=1 USE_XARGS=no
             CMAKE_BUILD_TYPE=Release ./scripts/docker-run.sh
          ./scripts/build-tools.sh


  SOF-alsa-plugin:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with: {filter: 'tree:0'}

      - name: apt install
        run: sudo apt-get update;
          sudo apt-get -y install ninja-build libasound2-dev

      # One space character is enough to detect most quoting issues
      - name: configure
        run: cmake -GNinja -B 'build plugin' -S tools/plugin
          -GNinja -Wdev -Werror=dev --warn-uninitialized

      # Retry with -j1 in case of error because parallel builds drown error
      # messages.
      - name: build ExternalProjects first to avoid build race condition
        run: cmake --build 'build plugin' -- sof_ep parser_ep ||
             cmake --build 'build plugin' -- sof_ep parser_ep -j1

      - name: Remaining build steps
        run: cmake --build 'build plugin' ||
             cmake --build 'build plugin' -j1
